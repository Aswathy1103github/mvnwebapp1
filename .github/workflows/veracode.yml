on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-java@v1
      with: 
        java-version: '8'
        
    - name: Build with Maven
      run: mvn -B package --file pom.xml
   # - run: mkdir deployment && cp target/*.war deployment
   # - run: pwd && ls && ls target/* && ls deployment/*
   # - run: curl --upload-file deployment/mvnwebapp.war "http://deployer:deployer@146.148.32.188:8081/manager/text/deploy?path=/githubaction&update=true"
        
    - uses: actions/upload-artifact@v2 # Copy files from repository to docker container so the next uploadandscan action can access them.
      with:
        path: folder_to_upload/*.jar # Wildcards can be used to filter the files copied into the container. See: https://github.com/actions/upload-artifact
    - uses: veracode/veracode-uploadandscan-action@master # Run the uploadandscan action. Inputs are described above.
      with:
        filepath: 'folder_to_upload/'
     #   vid: df8fb1b2d88861fa2e81578f91137e19
     #   vkey: 0915b40a8e9475e542893d26a3aa92f2d38f8577fb1c03a751aae6bba0f4763178ee12c073f26fa9612d4f9266c295c8aed17c2bf907a15b329a1a0433b8267a
    #vid: '${{ secrets.VERACODE_API_ID }}'
    #vkey: '${{ secrets.VERACODE_API_KEY }}'
        createsandbox: 'true'
        sandboxname: 'sandbox_mvnapp'
        scantimeout: 15
        exclude: '*.js'
        include: '*.war'
        criticality: 'VeryHigh'
